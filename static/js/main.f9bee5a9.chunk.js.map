{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/pages/Page404.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/InputGroup.js","components/contacts/CreateContact.js","components/contacts/UpdateContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","payload","concat","toConsumableArray","map","contact","id","filter","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","Link","to","style","logoIcon","defaultProps","color","About","Page404","Contact","showContactInfo","showInfo","deleteContact","delete","_this2","_this$props$contact","name","email","phone","showContactIcon","onClick","actionsIcons","editContactIcon","deleteContactIcon","bind","float","cursor","marginRight","Contacts","react","contacts_Contact","InputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","CreateContact","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_InputGroup","addButton","backgroundColor","UpdateContact","updatedContact","put","match","params","editButton","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9bee5a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst  Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload: contact)\r\n            };\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n    async componentDidMount() {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: response.data});\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const {branding} = props;\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark mb-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-user\" style={logoIcon}/> {branding}</Link>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\" /> Home</Link></li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contacts/add\" className=\"nav-link\"> <i className=\"fas fa-plus\" /> Add Contact</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-info\" /> About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nconst logoIcon = {\r\n  color: '#282828'\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">This is the about page of contact manger app!</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page404;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n    showInfo = () => {\r\n        this.setState({showContactInfo: !this.state.showContactInfo})\r\n    };\r\n    deleteContact = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    };\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name} <i className=\"fas fa-sort-down\" style={showContactIcon} onClick={this.showInfo} />\r\n                                <span style={actionsIcons}>\r\n                                    <Link to={`/contacts/${id}/edit`}><i className=\"fas fa-edit\" style={editContactIcon}  /></Link>\r\n                                <i className=\"fas fa-times\" style={deleteContactIcon} onClick={this.deleteContact.bind(this, id, dispatch)} />\r\n                                </span>\r\n                            </h4>\r\n                            {showContactInfo ?\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                                :null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nconst actionsIcons = {\r\n    float: 'right',\r\n};\r\nconst editContactIcon = {\r\n    color: '#F6F6E8',\r\n    cursor: 'pointer',\r\n    marginRight: '15px'\r\n};\r\nconst deleteContactIcon = {\r\n    color: '#F6F6E8',\r\n    cursor: 'pointer'\r\n};\r\n\r\nconst showContactIcon = {\r\n    cursor: 'pointer'\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <Fragment>\r\n                            <h1 className=\"m-3\"><span className=\"text-light\">Contact</span> List</h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst InputGroup = (props) => {\r\n    const { label, type, name, placeholder, value, onChange, error } = props;\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"name\">{ label }</label>\r\n            <input type={ type } className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                   placeholder={ placeholder } name={ name } id=\"name\" value={ value } onChange={ onChange } />\r\n            {error && <div className=\"invalid-feedback\">{ error }</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default InputGroup;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport InputGroup from \"../layout/InputGroup\";\r\n\r\nclass CreateContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        error: {},\r\n    };\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        if (name === '') {\r\n            this.setState({error: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({error: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({error: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'CREATE_CONTACT', payload: response.data});\r\n\r\n        this.setState({name: '', email: '', phone: '', error: {}});\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        const { name, email, phone, error } = this.state;\r\n        return (\r\n            <Consumer>\r\n                { value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card col-md-6 m-auto mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={ this.onSubmit.bind(this, dispatch) }>\r\n                                    <InputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\"\r\n                                                value={ name } onChange={ this.onChange } error={error.name} />\r\n                                    <InputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter Email\"\r\n                                                value={ email } onChange={ this.onChange } error={error.email} />\r\n                                    <InputGroup label=\"Phone\" type=\"tel\" name=\"phone\" placeholder=\"Enter Phone\"\r\n                                                value={ phone } onChange={ this.onChange } error={error.phone} />\r\n                                    <button type=\"submit\" className=\"btn btn-lg btn-block\" style={addButton} >Add Contact</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                }\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst addButton = {\r\n    color: '#F6F6E8',\r\n    backgroundColor: '#282828',\r\n};\r\n\r\nexport default CreateContact;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport InputGroup from \"../layout/InputGroup\";\r\n\r\nclass UpdateContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        error: {},\r\n    };\r\n    async componentDidMount() {\r\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`);\r\n        this.setState({\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            phone: response.data.phone,\r\n        });\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        if (name === '') {\r\n            this.setState({error: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({error: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({error: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n        const updatedContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`, updatedContact);\r\n        dispatch({type: 'UPDATE_CONTACT', payload: response.data});\r\n\r\n        this.setState({name: '', email: '', phone: '', error: {}});\r\n        this.props.history.push('/');\r\n    };\r\n    render() {\r\n        const { name, email, phone, error } = this.state;\r\n        return (\r\n            <Consumer>\r\n                { value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card col-md-6 mb-3 m-auto\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={ this.onSubmit.bind(this, dispatch) }>\r\n                                    <InputGroup label=\"Name\" name=\"name\" placeholder=\"Edit Name\"\r\n                                                value={ name } onChange={ this.onChange } error={error.name} />\r\n                                    <InputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Edit Email\"\r\n                                                value={ email } onChange={ this.onChange } error={error.email} />\r\n                                    <InputGroup label=\"Phone\" type=\"tel\" name=\"phone\" placeholder=\"Edit Phone\"\r\n                                                value={ phone } onChange={ this.onChange } error={error.phone} />\r\n                                    <button type=\"submit\" className=\"btn btn-lg btn-block\" style={editButton}>Edit Contact</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                }\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst editButton = {\r\n    color: '#F6F6E8',\r\n    backgroundColor: '#282828',\r\n};\r\n\r\n\r\nexport default UpdateContact;","import React, { Component } from 'react';\nimport { Provider } from \"./context\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport Page404 from \"./components/pages/Page404\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/CreateContact\";\nimport UpdateContact from \"./components/contacts/UpdateContact\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div className=\"App\">\n                        <Header branding=\"CONTACT MANAGER\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route exact path=\"/contacts/add\" component={AddContact} />\n                                <Route exact path=\"/contacts/:id/edit\" component={UpdateContact} />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route component={Page404} />\n                            </Switch>\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}